---
version: 0.2

proxy:
  logs: yes

phases:
  install:
    runtime-versions:
      java: corretto11
  pre_build:
    commands:
      - export CODEARTIFACT_AUTH_TOKEN=`aws codeartifact get-authorization-token --domain $ARTIFACT_DOMAIN --domain-owner $ARTIFACT_ACCOUNT_ID --query authorizationToken --output text`
      - export IMAGE_TAG=`date +%Y-%m-%d-%H%M`
      - export URL_REPO_MVN=https://$ARTIFACT_DOMAIN-$ARTIFACT_ACCOUNT_ID.d.codeartifact.$AWS_DEFAULT_REGION.amazonaws.com/maven/$ARTIFACT_REPO_NAME/
      - export ID_REPO_MVN="$ARTIFACT_DOMAIN-$ARTIFACT_REPO_NAME"
      - export NO_MVN_DOWNLOAD_MESSAGES="-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn"
      - cp ./codebuild/codebuild-maven-settings.xml $CODEBUILD_SRC_DIR/settings.xml
      - echo Preparing Building Docker for $MODULE_NAME...
  build:
    commands:
      - echo Build started on `date`
      - cd $CODEBUILD_SRC_DIR
      - mvn -s $CODEBUILD_SRC_DIR/settings.xml -B ${NO_MVN_DOWNLOAD_MESSAGES} clean compile test package
      # - mvn -s $CODEBUILD_SRC_DIR/settings.xml -B ${NO_MVN_DOWNLOAD_MESSAGES} deploy
      - echo Build completed on `date`
  post_build:
    commands:
      - echo Start post_build...
      - echo Writing image definitions file...
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI/$REPOSITORY_PATH/$IMAGE_REPO_NAME:$IMAGE_TAG > imageDetail_$CODEBUILD_BUILD_NUMBER.json

# reports:
#   MyFunctionalReports: 
#     files:
#       - '**/*'
#     base-directory: 'target/surefire-reports'
#   MyCoverageReports:  
#     files:
#       - 'jacoco.xml'
#     base-directory: 'target/site/jacoco'  
#     file-format: 'JACOCOXML'  

artifacts:
  files:
    - imageDetail_$CODEBUILD_BUILD_NUMBER.json

